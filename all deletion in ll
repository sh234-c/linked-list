#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node*next;
};
void linkedlisttraversal(struct node*ptr){
    while(ptr!=NULL){
        printf("element:%d\n",ptr->data);
        ptr=ptr->next;

    }
}
// struct node*deleteFirst(struct node*head){
//     struct node*ptr=head;
//     head=head->next;
//     free(ptr);
//     return head;
// }
// struct node*deleteAtindex(struct node*head,int index){
//     struct node*p=head;
//     struct node*q=head->next;
//     for(int i=0;i<index-1;i++){
//         p=p->next;
//         q=q->next;
//     }
//     p->next=q->next;
//     free(q);
//     return head;
// }
// struct node*deleteAtend(struct node*head){
//     struct node*p=head;
//     struct node*q=head->next;
//     while(q->next!=NULL){
//         p=p->next;
//         q=q->next;
//     }
//     p->next=NULL;
//     free(q);
//     return head;
// }
// struct node*deleteValue(struct node*head,int value){
//     struct node*p=head;
//     struct node*q=head->next;
//     while(q->data!=value && q->next!=NULL){
//         p=p->next;
//         q=q->next;
//     }
//     if(q->data==value){
//         p->next=q->next;
//         free(q);
//     }
//     return head;
// }
struct node*deleteValue(struct node*head,int value){
    struct node*p=head;
    struct node*q=head->next;
    while(q->data!=value && q->next!=NULL){
        p=p->next;
        q=q->next;
    }
    if(q->data==value){
        p->next=q->next;
        free(q);
    }
    return head;
}



 int main(){
     struct node*head;
     struct node*second;
     struct node*third;

     head=(struct node*)malloc(sizeof(struct node));
      second=(struct node*)malloc(sizeof(struct node));
      third=(struct node*)malloc(sizeof(struct node));

      head->data=7;
      head->next=second;

      second->data=66;
      second->next=third;

        third->data=78;
      third->next=NULL;
      linkedlisttraversal(head);
      head=deleteValue(head,66);
      linkedlisttraversal(head);
    
      return 0;
 }
