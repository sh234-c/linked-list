// // LINKED LIST TRAVERSAL
// #include <stdio.h>
// #include <stdlib.h>

// struct node{
//     int data;
//     struct node*next;
// };
// void linkedlisttraversal(struct node*ptr){
//     while(ptr!=NULL){
//         printf("element:%d\n",ptr->data);
//         ptr=ptr->next;
        
//     }
// }
 
//  int main(){
//      struct node*head;
//      struct node*second;
//      struct node*third;
     
//      head=(struct node*)malloc(sizeof(struct node));
//       second=(struct node*)malloc(sizeof(struct node));
//       third=(struct node*)malloc(sizeof(struct node));
       
//       head->data=7;
//       head->next=second;
       
//       second->data=66;
//       second->next=third;
       
//         third->data=78;
//       third->next=NULL;
//       linkedlisttraversal(head);
//       return 0;
//  }
#include <stdio.h>
#include  <stdlib.h>

struct node{
    int data;
    struct node*next;
};
void linkedlisttransversal(struct node*ptr){
    while(ptr!=0){
        printf("element:%d\n",ptr->data);
        ptr=ptr->next;
    }
}
int main(){
    struct node*head;
    struct node*second;
    struct node*third;
    struct node*fourth;
    
    head=(struct node*)malloc(sizeof(struct node));
     second=(struct node*)malloc(sizeof(struct node));
     third=(struct node*)malloc(sizeof(struct node));
       fourth=(struct node*)malloc(sizeof(struct node));
       
       head->data=8;
       head->next=second;
       
       second->data=11;
       second->next=third;
       
       third->data=15;
       third->next=fourth;
       
       fourth->data=20;
       fourth->next=NULL;
       linkedlisttransversal(head);
       return 0;
}
